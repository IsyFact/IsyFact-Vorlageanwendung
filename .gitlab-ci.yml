variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "-s settings.xml --batch-mode --errors --fail-at-end"

image: $BUILDIMAGE
stages:
  - buildstage
  - teststage
  - packagestage
  - deploystage
cache:
  paths:
    - .m2/repository
  key: "isyfactstandards"

#Vorlagen

.template: &vorlage
  tags:
   - zssi
   - docker
  retry: 1



#Buildstage
build:
  <<: *vorlage
  stage: buildstage
  artifacts:
   paths:
   - "target/*"
   expire_in: 6 h
  script:
   - rm -rf .m2/repository/de
   - mvn -U $MAVEN_CLI_OPTS compile

#Teststage
test:
  <<: *vorlage
  stage: teststage
  artifacts:
   paths:
    - "target/surefire-reports/*"
    - "target/site/*"
   expire_in: 1 day 
   reports:
    junit:
     - "target/surefire-reports/TEST-*.xml"
   when: always
  dependencies:
   - build
  script:
   - mvn $MAVEN_CLI_OPTS org.jacoco:jacoco-maven-plugin:prepare-agent -Dmaven.surefire.argline='@{argLine} -Xmx1g -Dfile.encoding=${project.build.sourceEncoding}' test org.jacoco:jacoco-maven-plugin:report
  after_script:
   - mkdir -p src/site
   - echo "<project name=\"IsyFact Standards\"></project>" > src/site/site.xml
   - mvn  $MAVEN_CLI_OPTS surefire-report:report-only
   - mvn -DgenerateReports=false $MAVEN_CLI_OPTS site
   - '[[ -f ./target/site/jacoco/index.html ]] && echo Code coverage:$(egrep "([0-9]{1,3}%)" ./target/site/jacoco/index.html -o -h |  head -1)'


package:
  <<: *vorlage
  stage: packagestage
  dependencies:
   - build
  script:
   - mvn -Dmaven.test.skip=true $MAVEN_CLI_OPTS package

deploy_release:
  <<: *vorlage
  stage: deploystage
  dependencies:
   - build
  script:
   - mvn -Prelease -Dmaven.test.skip=true -Dmaven.install.skip=true $MAVEN_CLI_OPTS deploy
  only:
   - tags

deploy_staging:
  <<: *vorlage
  stage: deploystage
  dependencies:
   - build
  script:
   - SNAPSHOT=true
   - '[[ $(mvn --non-recursive -Dexpression=project.version $MAVEN_CLI_OPTS help:evaluate | grep -v "\[.*") == *-SNAPSHOT ]] || SNAPSHOT=false'
   - '[[ $SNAPSHOT == true ]] && mvn -Dmaven.test.skip=true -Dmaven.install.skip=true $MAVEN_CLI_OPTS deploy || echo "Keine SNAPSHOT-Version - deploy wird nur bei Tags durchgefuehrt"'
  except:
   - tags

